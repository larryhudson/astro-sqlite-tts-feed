---
import {getArticles, createArticleInDb } from "../../utils/db"
import {Queue} from "bullmq"

let statusMessage;

if (Astro.request.method === "POST") {
  const taskQueue = new Queue('taskQueue');
  const formData = await Astro.request.formData();
  const { title, url } = Object.fromEntries(formData.entries());

  // TODO: instead of passing directly to bull task, should create new record in DB
  // then pass the DB ID to the bull task.
  const createdArticleId = createArticleInDb({
    title,
    url,
    });

  taskQueue.add('getAudioForText', {articleId: createdArticleId});  
  statusMessage = 'Added to queue!';
}

const articles = getArticles();
---

<h1>Articles</h1>

{statusMessage && (
<p>Status message: {statusMessage}</p>
)}

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>URL</th>
      <th>Audio</th>
    </tr>
  </thead>
  <tbody>
    {
      articles.map((article) => (
        <tr>
          <td>{article.title}</td>
          <td>{article.url}</td>
          <td>
            {article.mp3Url ? (
              <audio controls>
                <source src={article.mp3Url} type="audio/mpeg" />
              </audio>
            ) : (
              <form method="POST" action={`/articles/${article.id}/audio`}>
                <button type="submit">Get audio</button>
              </form>
            )}
          </td>
        </tr>
      ))
    }
  </tbody>
</table>

<h2>Add new</h2>

<form method="POST">
  <label>
    Title
    <input type="text" name="title" />
  </label>
  <label>
    URL
    <input type="text" name="url" />
  </label>
  <button type="submit">Add</button>
</form>
