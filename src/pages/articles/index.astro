---
import { getArticles, createArticleInDb } from "../../utils/db";
import { Queue } from "bullmq";

import { checkLoggedIn, addPasswordParamToUrl } from "@src/utils/auth";
const isLoggedIn = checkLoggedIn(Astro);
if (!isLoggedIn) {
  return Astro.redirect("/auth/login");
}

let statusMessage;

if (Astro.request.method === "POST") {
  const taskQueue = new Queue("taskQueue");
  const formData = await Astro.request.formData();
  const { title, url, taskType } = Object.fromEntries(formData.entries());

  // TODO: if the user doesn't enter a title, get it from the webpage / video automatically

  const createdArticleId = createArticleInDb({
    title,
    url,
  });

  const taskNameForType = {
    "text-to-speech": "textToSpeech",
    "yt-dlp": "ytDlp",
  };

  const taskName = taskNameForType[taskType];

  if (!taskName) {
    throw new Error(`Invalid type: ${taskType}`);
  }

  taskQueue.add(taskName, { articleId: createdArticleId });
  statusMessage = "Added to queue!";
}

const articles = getArticles();
---

<h1>Articles</h1>

{statusMessage && <p>Status message: {statusMessage}</p>}

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>URL</th>
      <th>Audio</th>
    </tr>
  </thead>
  <tbody>
    {
      articles.map((article) => (
        <tr>
          <td>{article.title}</td>
          <td>{article.url}</td>
          <td>
            {article.mp3Url ? (
              <audio controls>
                <source
                  src={addPasswordParamToUrl(article.mp3Url)}
                  type="audio/mpeg"
                />
              </audio>
            ) : (
              <form method="POST" action={`/articles/${article.id}/audio`}>
                <button type="submit">Get audio</button>
              </form>
            )}
          </td>
        </tr>
      ))
    }
  </tbody>
</table>

<h2>Add new</h2>

<form method="POST">
  <label>
    Title
    <input type="text" name="title" />
  </label>
  <label>
    URL
    <input type="text" name="url" />
  </label>
  <label>
    Type
    <select name="taskType">
      <option value="text-to-speech">Text to speech</option>
      <option value="yt-dlp">yt-dlp</option>
    </select>
  </label>
  <button type="submit">Add</button>
</form>
